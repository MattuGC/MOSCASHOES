#loginContainer {
    margin: 1vh;
    text-align: center;
}

#loginContainer h3 {
    margin: 0.5vw;
}

.sign-in {
    grid-area: sign-in;
}

.sign-up {
    grid-area: sign-up;
}

.login-form {
    grid-area: login-form;
}

.signup-form {
    grid-area: signup-form;
}

.recover-pass {
    grid-area: recover-pass;
}

.google-signin {
    grid-area: google-signin;
}

#menu .input {
    width: 80%;
}

.grid-container {
    display: grid;
    grid-template-areas:
        'sign-in sign-up'
        'login-form signup-form'
        'recover-pass empty'
        'google-signin google-signin';
    gap: 1.25vh;
    padding: 1.25vh;
}

/* .grid-container > div {
    margin-left: auto;
    margin-right: auto;
} */

#disclamer:hover ~ .context-title{
    display: block;
    opacity: 1;
    border-radius: 3em 3em 3em 3em/ 3em 3em 3em 3em !important;
    padding: 2vh;
}

#disclamer {
    cursor: default;
    display: inline-table;
    width: 2vw;
    height: 1.6vw;
}

#disclamer ~ .context-title {
    top: 1vh;
    left: 11%;
    width: 80%;
}



.swing {
    display: inline-block;
    padding: 1.25vh 0 1.25vh 1.8vh;
    font-weight: 400;
    color: var(--secundary-color);
    background: transparent;
    transition: all .3s ease-in-out;
    
    &::-webkit-input-placeholder {
      color: #efefef;
      text-indent: 0;
      font-weight: 300;
    }
  
    + label {
        display: flex;
        position: relative;
        top: -22%;
        left: 3%;
        padding: 0.7vh;
        text-shadow: 0 0.1vh 0 rgba(19, 74, 70, .4);
        transform-origin: 0.3vw 0.3vh;
        transform: rotate(0);
        animation: swing-back .4s 1 ease-in-out;
        width: fit-content;
        font-size: 0.8rem;
    }
}

@keyframes swing {
    0% {
        transform: rotate(0);
    }
    20% {
        transform: rotate(116deg);
    }
    40% {
        transform: rotate(60deg);
    }
    60% {
        transform: rotate(98deg);
    }
    80% {
        transform: rotate(76deg);
    }
    100% {
        transform: rotate(82deg);
    }
}
@keyframes swing-back {
    0% {
        transform: rotate(82deg);
    }
    100% {
        transform: rotate(0);
    }
}

.swing:focus,
.swing:active {
    color: var(--main-color);
    text-indent: 0;
    background: var(--secundary-color);
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;

    &::-webkit-input-placeholder {
        color: #aaa;
    }
    + label {
        animation: swing 1.4s 1 ease-in-out;
        transform: rotate(82deg);
    }
}

/* Login Button */
/* ----- ------ */

#login-menu button {
    padding: 0.5rem;
}

/* Recover Pass */
/* ----- ------ */
#recover-pass {
    width: fit-content;
    margin-left: auto;
    margin-right: auto;
}

/* Checkbox */
/* -------- */

.check-container {
    position: relative;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    padding: 0.1rem;
    border-radius: 0.1em / 10em 10em 0.1em 0.1em;
    height: 3vh;
    display: inline-flex;
    width: 3vh;
}
  
  /* Hide the browser's default checkbox */
.check-container input {
    position: relative;
    opacity: 0;
    cursor: pointer;
    height: auto;
    width: auto;
}
  
/* Create a custom checkbox */
.checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: auto;
    width: auto;
    background-color: transparent;
}
  
/* On mouse-over, add a grey background color */
.check-container:hover input ~ .checkmark {
background-color: transparent;
}
  
/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}
  
/* Show the checkmark when checked */
.check-container input:checked ~ .checkmark:after {
    display: block;
}
  
/* Style the checkmark/indicator */
/* .check-container .checkmark:after {
    left: 1.1vw;
    top: 0.6vh;
    width: 0.6vw;
    height: 1.3vh;
    border-width: 0 0.4vw 0.4vh 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
} */
.check-container .checkmark:after {
    content: "";
    display: none;
    width: 0.6vw; /* Ajusta el tamaño del tilde */
    height: 1.3vh; /* Ajusta el tamaño del tilde */
    border: var(--sticker-outline-style) var(--secundary-color); /* Asegúrate de que el color sea visible */
    border-width: 0 2px 2px 0; /* Ajusta los bordes para formar un tilde */
    left: 5px; /* Ajusta la posición del tilde */
    top: 2px; /* Ajusta la posición del tilde */
    transform: rotate(45deg);
}

/* Login Requirementes */
/* ----- ------------- */

.requirements {
    opacity: 0;
    top: 0vh;
    left: -113%;
    height: auto;
    width: 111%;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 2.0vh;
    padding: 2rem;
}

.requirements .sewn-button {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 0.5rem;
    padding: 0.3rem;
}

.requirements svg {
    position: relative;
    height: 1rem;
    width: 2rem;
}

.requirements p {
    /* margin-top: 0.7rem;
    margin-bottom: 0.7rem;
    margin-left: 0.5rem;
    margin-right: 0.5rem; */
    margin: 0;
}

.context-title .email-requirements,
.context-title .password-requirements {
    height: auto;
}

.context-title .email-requirements p {
    text-align: left;
}

.context-title .password-requirements p {
    text-align: right;
}

.checkmark {
    display: inline-block; /* Asegura que el SVG se comporte como un elemento en línea */
}

path[data-check="true"] {
    color: var(--secundary-color); /* Color cuando data-check es true */
}

path[data-check="false"] {
    color: var(--pay-attention-color); /* Color cuando data-check es false */
}
